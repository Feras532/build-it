<!DOCTYPE html>
<html>

<head>
    <title>{{ userName }}'s Profile</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }

        .profile-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.1);
        }

        .profile-container h1 {
            text-align: center;
            color: #333;
        }

        .profile-container p {
            text-align: center;
            color: #666;
        }

        .logout-button {
            display: block;
            width: 100px;
            height: 30px;
            margin: 20px auto;
            background-color: #f44336;
            color: #fff;
            text-align: center;
            line-height: 30px;
            border-radius: 5px;
            text-decoration: none;
        }

        .pc-row {
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .pc-row button {
            margin-right: 10px;
        }

        .pc-details {
            display: none;
            /* initially hidden */
            margin: 10px 0;
            background-color: #f0f0f0;
            padding: 20px;
        }

        .pc-details div {
            margin-bottom: 10px;
        }

        .pc-row button {
            background-color: #787878;
            /* Green */
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 12px;
            transition: background-color 0.3s ease;
        }

        .logout-button:hover {
            background-color: #d32f2f;
        }

        .pc-row button:hover {
            background-color: #b6b6b6;
        }

        /* Improve the appearance of the PC details */
        .pc-details {
            background-color: #ffffff;
            box-shadow: 0 1px 5px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            padding: 15px;
            margin-top: 10px;
        }

        /* Style the text for each part */
        .pc-details div {
            background: #f7f7f7;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 8px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body>
    <div class="profile-container">
        <h1>Welcome, {{ userName }}!</h1>
        <p>{{ Email }}</p>
        <a href="/auth/logout" class="logout-button">Logout</a>

        <h2>Your PCs</h2>

        <!-- Placeholder for PCs -->
        <div id="pcs-container"></div>
    </div>



<script>
    const pcs = {{{ json pcs }}};
    const userName = "{{ userName }}"; 
    const container = document.getElementById('pcs-container');

    pcs.forEach((pc, index) => {
        const pcDiv = document.createElement('div');
        pcDiv.classList.add('pc-row');

        // Details button
        const detailsButton = document.createElement('button');
        detailsButton.textContent = 'Expand ↓';
        detailsButton.onclick = () => {
            const detailsDiv = pcDiv.querySelector('.pc-details');
            const isHidden = detailsDiv.style.display === 'none';
            detailsDiv.style.display = isHidden ? 'block' : 'none';
            detailsButton.textContent = isHidden ? 'Collapse ↑' : 'Expand ↓';
        };
        pcDiv.appendChild(detailsButton);
        const pcIdAsString = pc._id.toString();
        console.log(pcIdAsString)
        // Delete button
        const deleteButton = document.createElement('button');
        deleteButton.innerHTML = '<i class="fa fa-trash"></i>'; // Using Font Awesome for trash icon
        deleteButton.classList.add('delete-button');
        deleteButton.onclick = () => deletePC(userName, pcIdAsString);
        pcDiv.appendChild(deleteButton);

        // Append price info
        pcDiv.appendChild(document.createTextNode(` PC ${index + 1}: ${pc.totalPrice}`));

        // PC details section
        const detailsDiv = document.createElement('div');
        detailsDiv.classList.add('pc-details');
        detailsDiv.style.display = 'none';
        Object.keys(pc).forEach((part) => {
            if (part !== 'totalPrice' && pc[part] && typeof pc[part] === 'object') {
                const partInfo = pc[part];
                const partDiv = document.createElement('div');
                partDiv.textContent = `${part}: ${partInfo.brand} ${partInfo.model}, Price: ${partInfo.price}`;
                detailsDiv.appendChild(partDiv);
            }
        });
        pcDiv.appendChild(detailsDiv);

        // Add the pcDiv to the container
        container.appendChild(pcDiv);
    });

    function deletePC(userName, pcId) {
        if (!confirm('Are you sure you want to delete this PC configuration?')) {
            return;
        }

        fetch(`/auth/deletePC/${encodeURIComponent(userName)}/${encodeURIComponent(pcId)}`, { method: 'DELETE' })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    window.location.reload();
                } else {
                    console.error('Failed to delete the PC configuration');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }
</script>

    </div>


</body>

</html>